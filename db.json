{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1464670690779},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1464670690779},{"_id":"themes/next/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1464670690782},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1464670690783},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1464670690783},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1464670690784},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1464670690785},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1464670690786},{"_id":"themes/next/_config.yml","hash":"d82b4d4c54c23086f75063d2a4dd45264a86def2","modified":1464770437708},{"_id":"themes/next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1464670690787},{"_id":"themes/next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1464670690788},{"_id":"themes/next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1464670690845},{"_id":"source/_posts/2016-06-01-利用hexo远程部署到Github搭建个人博客.md","hash":"48d0c6e8b7eedd08f3c82ecfde2a042f511a82ab","modified":1464771445975},{"_id":"source/_posts/2016-06-12-Rx系列笔记.md","hash":"f072f046e4501861b0b3b24d4abebc6b3e0c3e6f","modified":1466069652917},{"_id":"source/_posts/2016-06-16-使用RxJava实现EventBus——RxBus（翻译）.md","hash":"be7424506068a3879ee1e56f32eb4a44575dd1b3","modified":1466069938740},{"_id":"source/_posts/hello-world.md","hash":"565b0ee7a5ef8219c00603ae62ed2a2862d96c60","modified":1464766188434},{"_id":"source/about/index.md","hash":"9b2271604dc9ffa02bdef9d8a031a38ba8860deb","modified":1464768763552},{"_id":"source/tags/index.md","hash":"848560e2f167a943336bb128da65a328d8c5874f","modified":1464770141012},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1464670690789},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1464670690790},{"_id":"themes/next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1464670690790},{"_id":"themes/next/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1464670690791},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1464670690791},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1464670690792},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1464670690793},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1464670690794},{"_id":"themes/next/languages/zh-Hans.yml","hash":"23b45e77c1846c9457b98c745a60a9461678c389","modified":1464670690795},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1464670690796},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1464670690795},{"_id":"themes/next/layout/_layout.swig","hash":"1138b849e1240249480849cc2b6c6d09b28207a5","modified":1464670690811},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1464670690841},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1464670690842},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1464670690842},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1464670690843},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1464670690843},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1464670690844},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1464670690845},{"_id":"themes/next/source/404.html","hash":"40724043ffccaf0772643259431ce01c0b88863d","modified":1464752410740},{"_id":"themes/next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1464670690985},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1464670690985},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1464670690986},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690915},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1464670690812},{"_id":"themes/next/layout/_macro/post.swig","hash":"843389ec3cb4c2baa6a6a2bb916f803c89ca723b","modified":1464670690813},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1464670690813},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9fc9f89c169439d7584197930359b758eb198a1c","modified":1464670690814},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"d569af20d20a960d534a5b60f90c20fef519d351","modified":1464670690815},{"_id":"themes/next/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1464670690816},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1464670690816},{"_id":"themes/next/layout/_partials/footer.swig","hash":"27669118b957e8a39d843b63dddf561c9d62b336","modified":1464670690817},{"_id":"themes/next/layout/_partials/head.swig","hash":"0065ae49406ade2848b86bd4cd520af9d2148ece","modified":1464670690817},{"_id":"themes/next/layout/_partials/header.swig","hash":"46f8bbe51c0334c64c3a237bc0fe8ef73c6e58e1","modified":1464670690819},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1464670690820},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1464670690820},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1464670690826},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1464670690827},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1464670690827},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1464670690840},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1464670690846},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1464670690847},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1464670690847},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1464670690914},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1464670690916},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1464670690916},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1464670690917},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1464670690917},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1464670690918},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1464670690920},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1464670690920},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1464670690921},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1464670690921},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1464670690921},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1464670690922},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1464670690923},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1464670690922},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690830},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690829},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690893},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690892},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690895},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690911},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1464670690913},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1464670690818},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1464670690821},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1464670690822},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1464670690822},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1464670690823},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1464670690824},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1464670690824},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1464670690825},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1464670690828},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1464670690830},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1464670690831},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1464670690836},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"3bb70d8d68142ee27f3cc98c2a4339757e7af3d3","modified":1464670690838},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1464670690839},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1464670690839},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1464670690840},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1464670690892},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1464670690894},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1464670690894},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1464670690911},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"b8e3663996b39590509d843f674360872b0242ac","modified":1464670690912},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a7ae72e846393493385275d934eaa78534d9834c","modified":1464670690913},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1464670690924},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1464670690925},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1464670690926},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1464670690926},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1464670690927},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1464670690929},{"_id":"themes/next/source/js/src/utils.js","hash":"418d09eb4df5dcc5e8d13d7f6245b1888200b51c","modified":1464670690929},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1464670690931},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1464670690931},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1464670690943},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1464670690944},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1464670690945},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1464670690946},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1464670690968},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1464670690949},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1464670690949},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1464670690950},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1464670690951},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1464670690951},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1464670690972},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1464670690972},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1464670690973},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1464670690973},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1464670690973},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1464670690975},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1464670690978},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1464670690979},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1464670690982},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1464670690983},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1464670690984},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1464670690970},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1464670690832},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1464670690832},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1464670690833},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1464670690833},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1464670690833},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1464670690835},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"f8b6a3017ab79057ce99f1ccb512193d67f4a35f","modified":1464670690837},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"2338be12ffee58bc08197cb9da8aaf31737aaf5c","modified":1464670690837},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1464670690849},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1464670690850},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1464670690852},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1464670690851},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1464670690861},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1464670690878},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1464670690888},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1464670690889},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1464670690889},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1464670690890},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1464670690890},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1464670690891},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1464670690896},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1464670690896},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1464670690897},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1464670690898},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1464670690898},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1464670690898},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1464670690899},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1464670690902},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1464670690903},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1464670690904},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1464670690903},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1464670690905},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1464670690907},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1464670690908},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1464670690908},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1464670690909},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1464670690909},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1464670690910},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1464670690910},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1464670690928},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1464670690932},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1464670690933},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1464670690933},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1464670690934},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1464670690935},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1464670690936},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1464670690941},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1464670690942},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1464670690943},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1464670690947},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1464670690948},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1464670690953},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1464670690955},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1464670690954},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1464670690967},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1464670690976},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1464670690977},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1464670690957},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1464670690958},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1464670690966},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1464670690980},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1464670690852},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1464670690853},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1464670690854},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1464670690854},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1464670690855},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1464670690856},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"70ec8d38d2b3ee1906793d1dcb68032adfa65f03","modified":1464670690856},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1464670690857},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1464670690858},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1464670690859},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1464670690860},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1464670690861},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1464670690862},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1464670690863},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1464670690864},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1464670690864},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1464670690865},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1464670690866},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1464670690865},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1464670690866},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1464670690867},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1464670690867},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1464670690868},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1464670690869},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1464670690871},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1464670690872},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1464670690874},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1464670690874},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1464670690875},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1464670690876},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1464670690876},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1464670690877},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1464670690877},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1464670690879},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1464670690880},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1464670690881},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1464670690881},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1464670690882},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1464670690883},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1464670690885},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1464670690886},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1464670690886},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1464670690887},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1464670690901},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1464670690901},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1464670690906},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1464670690937},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1464670690937},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1464670690939},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1464670690938},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1464670690940},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1464670690940},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1464670690965},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1464670690962},{"_id":"public/search.xml","hash":"54aeba722f11ab97be0437391b491a25f51d39b2","modified":1466070145945},{"_id":"public/about/index.html","hash":"9c1288f32066247e5aa618a8b1aeac5eb0709078","modified":1466069876857},{"_id":"public/tags/index.html","hash":"d19d857b8c2a64acb0f853799d8fd8e7fa55c629","modified":1466069876857},{"_id":"public/tags/搭建个人博客/index.html","hash":"83c56a53ef721e028092db6d12d9fc83e36e99e4","modified":1466069876858},{"_id":"public/tags/Android/index.html","hash":"b0196a115e36fea9f72029a49b4e3fc4a05c124c","modified":1466069876858},{"_id":"public/Rx系列笔记/index.html","hash":"c092c1aa7095db3d216e0f51edbef94c7124378f","modified":1466069876858},{"_id":"public/利用hexo远程部署到Github搭建个人博客/index.html","hash":"14b1b962b2d7653b0349840d384c290ff0b7e934","modified":1466069876858},{"_id":"public/hello-world/index.html","hash":"25020cfb82b4211754ed470c1cba3ef2b7477934","modified":1466069876859},{"_id":"public/archives/index.html","hash":"98f7be5ab78bf73e1712f81553cd920e60c81673","modified":1466069876859},{"_id":"public/archives/2016/index.html","hash":"851bd6d3e116ba87bad0945a6b180356ba0e7d37","modified":1466069876859},{"_id":"public/archives/2016/05/index.html","hash":"4091385caa1a1cec7e19dc2f325248fe6abc971e","modified":1466069876860},{"_id":"public/archives/2016/06/index.html","hash":"3e700c451dc81415810c6fb1fcda62825747296f","modified":1466069876860},{"_id":"public/index.html","hash":"344754f7fc35bb104a1118048c6f6648d8aebff8","modified":1466070145955},{"_id":"public/categories/Android/index.html","hash":"0bb24396ab8d162bef86d606a0bd15aad4a5567d","modified":1466069876858},{"_id":"public/tags/RxJava-RxBus/index.html","hash":"7c82c65a2dc4c1090d1e6c54df69ccd2741ace60","modified":1466069816843},{"_id":"public/使用RxJava实现EventBus——RxBus（翻译）/index.html","hash":"a6732b2702c7be8dd47e02584789b51ebe6e2dd2","modified":1466070145955},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1466069816852},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1466069816852},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1466069816853},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1466069816853},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1466069816853},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1466069816853},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1466069816853},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1466069816853},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466069816853},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466069816853},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1466069816853},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1466069816853},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1466069816853},{"_id":"public/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1466069816853},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1466069816853},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1466069816853},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1466069816853},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1466069816853},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1466069816853},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1466069816853},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1466069816853},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1466069816853},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1466069816854},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1466069816854},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1466069817785},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1466069817794},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1466069817795},{"_id":"public/404.html","hash":"9632ea7a146fa3d7bd6d229144ca356ef8fd5506","modified":1466069817802},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1466069817802},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1466069817802},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1466069817802},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1466069817802},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1466069817802},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1466069817802},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1466069817802},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1466069817802},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1466069817802},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1466069817802},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1466069817802},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1466069817803},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1466069817803},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1466069817803},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1466069817803},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1466069817803},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1466069817803},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1466069817803},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1466069817803},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1466069817804},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1466069817804},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1466069817804},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1466069817804},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1466069817804},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1466069817804},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1466069817804},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1466069817805},{"_id":"public/css/main.css","hash":"1e4ecebbda7fa3cd3c6be5074e2bb4b94e8d306b","modified":1466069817805},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1466069817805},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1466069817805},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1466069817805},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1466069817806},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1466069817806},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1466069817806},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1466069817806},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1466069817806},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1466069817806},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1466069817819},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1466069817859},{"_id":"public/tags/RxJava/index.html","hash":"01bcd52e2163ee8585f7a5acd94c90a27fcd1738","modified":1466069876863}],"Category":[{"name":"Android","_id":"cipi445hr0007h8qwwmlk7olf"}],"Data":[],"Page":[{"title":"about","date":"2016-06-01T08:05:29.000Z","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-06-01 16:05:29\ncomments: false\n---\n","updated":"2016-06-01T08:12:43.552Z","path":"about/index.html","layout":"page","_id":"cipi445ha0001h8qw49bz2g3k","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-06-01T08:00:50.000Z","comments":0,"type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-06-01 16:00:50\ncomments: false\ntype: \"tags\"\n---\n","updated":"2016-06-01T08:35:41.012Z","path":"tags/index.html","layout":"page","_id":"cipi445hf0003h8qw72ys3s2e","content":"","excerpt":"","more":""}],"Post":[{"title":"利用hexo远程部署到Github搭建个人博客","date":"2016-05-31T13:15:31.000Z","_content":"\n## 搭建准备工作\n* 搭建git环境，推荐[廖雪峰的git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n* 安装Node.js，推荐[菜鸟教程关于Node.js部分](http://www.runoob.com/nodejs/nodejs-install-setup.html)\n* 拥有一个[Github账号](https://github.com/)\n\n<!-- more -->\n\n## 安装hexo并初始化\n在想要建站的位置右键打开菜单选择 'Git Bash Here'，并输入\n```\n$ npm install -g hexo-cli #安装指令```\n\n在执行完安装指令之后继续执行以下初始化命令\n\n```\nhexo init .  #. 表示在当前文件夹执行初始化\nnpm install```\n\n\n## 相关配置\nhexo中最常用的是主题设置，其他还有网站相关属性、网站的设置、新文章的默认配置、分类、标签设置等\n### 主题设置\n修改``_config.yml`` 中的``theme:``属性可修改主题样式。\n推荐主题可阅读[来自知乎的hexo主题推荐](https://www.zhihu.com/question/24422335)\nPS：当前blog使用的是 [next](http://theme-next.iissnan.com/)\n### 生成标签页\n新建一个名字为tags的页面：\n```\n$ hexo new page \"tags\"```\n\n在生成的页面的[Front-matter](https://hexo.io/zh-cn/docs/front-matter.html)加上\n```\ntype: \"tags\"\n#如果有加上多说或者其他评论系统，请加上以下代码以在本页面关闭评论系统\ncomments: false```\n\n在添加完之后在主题配置文件的menu节点加上tags后重新部署即可完成\n```\nmenu:\n  home: /\n  archives: /archives\n  tags: /tags```\n  \n### 其他配置\n可参考[Hexo的说明文档](https://hexo.io/zh-cn/docs/configuration.html)进行配置\n\n## 部署\nhexo可以部署到本地调试，也可以部署到远程服务器\n### 部署到本地\n在执行完hexo的初始化之后可执行下面的命令运行\n\n```\nhexo g \nhexo s```\n\n在执行完之后在浏览器输入地址``http://localhost:4000/``。\n\n### 部署到Github\n#### 前置条件\n\n本机的ssh已加到Github上，[添加ssh教程](http://blog.csdn.net/binyao02123202/article/details/20130891)。\n\n#### 开始部署\n在Github上新建一个项目（repository）并配置``_config.yml``文件的``deploy:``属性\n\n```bash\n## Deployment\n### Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: ##这里为项目的Git地址\n  branch: gh-pages ##要部署到的项目的分支(branch)\n```\n\n在配置完成之后执行以下命令运行\n\n```\nhexo g\nhexo d```\n\n完成后在浏览器输入``_config.yml``中配置的``url:``即可打开个人博客\n\n## F&Q\n* F：为什么在本地上部署成功，而远程部署到Github时会出现没有格式的情况？\n  Q：必须在``_config.yml``中设置对应的``url:``和``root: ``属性，其中``url:``必须为完整的网站地址，``root: ``网站除去站点地址后面的那一部分，比如：我的blog设置为 ``url: http://naughtboy.github.io/blog/ root: /blog/``\n\n* F：怎么不让在首页的时候整篇文章都显示出来？\n  Q：文章截断，在需要截断的地方插入 ``<!--more-->``\n  ","source":"_posts/2016-06-01-利用hexo远程部署到Github搭建个人博客.md","raw":"---\ntitle: 利用hexo远程部署到Github搭建个人博客\ndate: 2016-05-31 21:15:31\ntags: 搭建个人博客\n---\n\n## 搭建准备工作\n* 搭建git环境，推荐[廖雪峰的git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000)\n* 安装Node.js，推荐[菜鸟教程关于Node.js部分](http://www.runoob.com/nodejs/nodejs-install-setup.html)\n* 拥有一个[Github账号](https://github.com/)\n\n<!-- more -->\n\n## 安装hexo并初始化\n在想要建站的位置右键打开菜单选择 'Git Bash Here'，并输入\n```\n$ npm install -g hexo-cli #安装指令```\n\n在执行完安装指令之后继续执行以下初始化命令\n\n```\nhexo init .  #. 表示在当前文件夹执行初始化\nnpm install```\n\n\n## 相关配置\nhexo中最常用的是主题设置，其他还有网站相关属性、网站的设置、新文章的默认配置、分类、标签设置等\n### 主题设置\n修改``_config.yml`` 中的``theme:``属性可修改主题样式。\n推荐主题可阅读[来自知乎的hexo主题推荐](https://www.zhihu.com/question/24422335)\nPS：当前blog使用的是 [next](http://theme-next.iissnan.com/)\n### 生成标签页\n新建一个名字为tags的页面：\n```\n$ hexo new page \"tags\"```\n\n在生成的页面的[Front-matter](https://hexo.io/zh-cn/docs/front-matter.html)加上\n```\ntype: \"tags\"\n#如果有加上多说或者其他评论系统，请加上以下代码以在本页面关闭评论系统\ncomments: false```\n\n在添加完之后在主题配置文件的menu节点加上tags后重新部署即可完成\n```\nmenu:\n  home: /\n  archives: /archives\n  tags: /tags```\n  \n### 其他配置\n可参考[Hexo的说明文档](https://hexo.io/zh-cn/docs/configuration.html)进行配置\n\n## 部署\nhexo可以部署到本地调试，也可以部署到远程服务器\n### 部署到本地\n在执行完hexo的初始化之后可执行下面的命令运行\n\n```\nhexo g \nhexo s```\n\n在执行完之后在浏览器输入地址``http://localhost:4000/``。\n\n### 部署到Github\n#### 前置条件\n\n本机的ssh已加到Github上，[添加ssh教程](http://blog.csdn.net/binyao02123202/article/details/20130891)。\n\n#### 开始部署\n在Github上新建一个项目（repository）并配置``_config.yml``文件的``deploy:``属性\n\n```bash\n## Deployment\n### Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: ##这里为项目的Git地址\n  branch: gh-pages ##要部署到的项目的分支(branch)\n```\n\n在配置完成之后执行以下命令运行\n\n```\nhexo g\nhexo d```\n\n完成后在浏览器输入``_config.yml``中配置的``url:``即可打开个人博客\n\n## F&Q\n* F：为什么在本地上部署成功，而远程部署到Github时会出现没有格式的情况？\n  Q：必须在``_config.yml``中设置对应的``url:``和``root: ``属性，其中``url:``必须为完整的网站地址，``root: ``网站除去站点地址后面的那一部分，比如：我的blog设置为 ``url: http://naughtboy.github.io/blog/ root: /blog/``\n\n* F：怎么不让在首页的时候整篇文章都显示出来？\n  Q：文章截断，在需要截断的地方插入 ``<!--more-->``\n  ","slug":"利用hexo远程部署到Github搭建个人博客","published":1,"updated":"2016-06-01T08:57:25.975Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipi445h30000h8qwwqi1ca7j","content":"<h2 id=\"搭建准备工作\"><a href=\"#搭建准备工作\" class=\"headerlink\" title=\"搭建准备工作\"></a>搭建准备工作</h2><ul>\n<li>搭建git环境，推荐<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\" target=\"_blank\" rel=\"external\">廖雪峰的git教程</a></li>\n<li>安装Node.js，推荐<a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\" target=\"_blank\" rel=\"external\">菜鸟教程关于Node.js部分</a></li>\n<li>拥有一个<a href=\"https://github.com/\" target=\"_blank\" rel=\"external\">Github账号</a></li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"安装hexo并初始化\"><a href=\"#安装hexo并初始化\" class=\"headerlink\" title=\"安装hexo并初始化\"></a>安装hexo并初始化</h2><p>在想要建站的位置右键打开菜单选择 ‘Git Bash Here’，并输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli #安装指令</span><br></pre></td></tr></table></figure></p>\n<p>在执行完安装指令之后继续执行以下初始化命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init .  #. 表示在当前文件夹执行初始化</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"相关配置\"><a href=\"#相关配置\" class=\"headerlink\" title=\"相关配置\"></a>相关配置</h2><p>hexo中最常用的是主题设置，其他还有网站相关属性、网站的设置、新文章的默认配置、分类、标签设置等</p>\n<h3 id=\"主题设置\"><a href=\"#主题设置\" class=\"headerlink\" title=\"主题设置\"></a>主题设置</h3><p>修改<code>_config.yml</code> 中的<code>theme:</code>属性可修改主题样式。<br>推荐主题可阅读<a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"external\">来自知乎的hexo主题推荐</a><br>PS：当前blog使用的是 <a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">next</a></p>\n<h3 id=\"生成标签页\"><a href=\"#生成标签页\" class=\"headerlink\" title=\"生成标签页\"></a>生成标签页</h3><p>新建一个名字为tags的页面：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></p>\n<p>在生成的页面的<a href=\"https://hexo.io/zh-cn/docs/front-matter.html\" target=\"_blank\" rel=\"external\">Front-matter</a>加上<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">#如果有加上多说或者其他评论系统，请加上以下代码以在本页面关闭评论系统</span><br><span class=\"line\">comments: false</span><br></pre></td></tr></table></figure></p>\n<p>在添加完之后在主题配置文件的menu节点加上tags后重新部署即可完成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  tags: /tags</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"其他配置\"><a href=\"#其他配置\" class=\"headerlink\" title=\"其他配置\"></a>其他配置</h3><p>可参考<a href=\"https://hexo.io/zh-cn/docs/configuration.html\" target=\"_blank\" rel=\"external\">Hexo的说明文档</a>进行配置</p>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>hexo可以部署到本地调试，也可以部署到远程服务器</p>\n<h3 id=\"部署到本地\"><a href=\"#部署到本地\" class=\"headerlink\" title=\"部署到本地\"></a>部署到本地</h3><p>在执行完hexo的初始化之后可执行下面的命令运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g </span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>在执行完之后在浏览器输入地址<code>http://localhost:4000/</code>。</p>\n<h3 id=\"部署到Github\"><a href=\"#部署到Github\" class=\"headerlink\" title=\"部署到Github\"></a>部署到Github</h3><h4 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h4><p>本机的ssh已加到Github上，<a href=\"http://blog.csdn.net/binyao02123202/article/details/20130891\" target=\"_blank\" rel=\"external\">添加ssh教程</a>。</p>\n<h4 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h4><p>在Github上新建一个项目（repository）并配置<code>_config.yml</code>文件的<code>deploy:</code>属性</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Deployment</span></span><br><span class=\"line\"><span class=\"comment\">### Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: <span class=\"comment\">##这里为项目的Git地址</span></span><br><span class=\"line\">  branch: gh-pages <span class=\"comment\">##要部署到的项目的分支(branch)</span></span><br></pre></td></tr></table></figure>\n<p>在配置完成之后执行以下命令运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>完成后在浏览器输入<code>_config.yml</code>中配置的<code>url:</code>即可打开个人博客</p>\n<h2 id=\"F-amp-Q\"><a href=\"#F-amp-Q\" class=\"headerlink\" title=\"F&amp;Q\"></a>F&amp;Q</h2><ul>\n<li><p>F：为什么在本地上部署成功，而远程部署到Github时会出现没有格式的情况？<br>Q：必须在<code>_config.yml</code>中设置对应的<code>url:</code>和<code>root:</code>属性，其中<code>url:</code>必须为完整的网站地址，<code>root:</code>网站除去站点地址后面的那一部分，比如：我的blog设置为 <code>url: http://naughtboy.github.io/blog/ root: /blog/</code></p>\n</li>\n<li><p>F：怎么不让在首页的时候整篇文章都显示出来？<br>Q：文章截断，在需要截断的地方插入 <code>&lt;!--more--&gt;</code></p>\n</li>\n</ul>\n","excerpt":"<h2 id=\"搭建准备工作\"><a href=\"#搭建准备工作\" class=\"headerlink\" title=\"搭建准备工作\"></a>搭建准备工作</h2><ul>\n<li>搭建git环境，推荐<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000\">廖雪峰的git教程</a></li>\n<li>安装Node.js，推荐<a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\">菜鸟教程关于Node.js部分</a></li>\n<li>拥有一个<a href=\"https://github.com/\">Github账号</a></li>\n</ul>","more":"<h2 id=\"安装hexo并初始化\"><a href=\"#安装hexo并初始化\" class=\"headerlink\" title=\"安装hexo并初始化\"></a>安装hexo并初始化</h2><p>在想要建站的位置右键打开菜单选择 ‘Git Bash Here’，并输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli #安装指令</span><br></pre></td></tr></table></figure></p>\n<p>在执行完安装指令之后继续执行以下初始化命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init .  #. 表示在当前文件夹执行初始化</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"相关配置\"><a href=\"#相关配置\" class=\"headerlink\" title=\"相关配置\"></a>相关配置</h2><p>hexo中最常用的是主题设置，其他还有网站相关属性、网站的设置、新文章的默认配置、分类、标签设置等</p>\n<h3 id=\"主题设置\"><a href=\"#主题设置\" class=\"headerlink\" title=\"主题设置\"></a>主题设置</h3><p>修改<code>_config.yml</code> 中的<code>theme:</code>属性可修改主题样式。<br>推荐主题可阅读<a href=\"https://www.zhihu.com/question/24422335\">来自知乎的hexo主题推荐</a><br>PS：当前blog使用的是 <a href=\"http://theme-next.iissnan.com/\">next</a></p>\n<h3 id=\"生成标签页\"><a href=\"#生成标签页\" class=\"headerlink\" title=\"生成标签页\"></a>生成标签页</h3><p>新建一个名字为tags的页面：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></p>\n<p>在生成的页面的<a href=\"https://hexo.io/zh-cn/docs/front-matter.html\">Front-matter</a>加上<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">#如果有加上多说或者其他评论系统，请加上以下代码以在本页面关闭评论系统</span><br><span class=\"line\">comments: false</span><br></pre></td></tr></table></figure></p>\n<p>在添加完之后在主题配置文件的menu节点加上tags后重新部署即可完成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  tags: /tags</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"其他配置\"><a href=\"#其他配置\" class=\"headerlink\" title=\"其他配置\"></a>其他配置</h3><p>可参考<a href=\"https://hexo.io/zh-cn/docs/configuration.html\">Hexo的说明文档</a>进行配置</p>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>hexo可以部署到本地调试，也可以部署到远程服务器</p>\n<h3 id=\"部署到本地\"><a href=\"#部署到本地\" class=\"headerlink\" title=\"部署到本地\"></a>部署到本地</h3><p>在执行完hexo的初始化之后可执行下面的命令运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g </span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>在执行完之后在浏览器输入地址<code>http://localhost:4000/</code>。</p>\n<h3 id=\"部署到Github\"><a href=\"#部署到Github\" class=\"headerlink\" title=\"部署到Github\"></a>部署到Github</h3><h4 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h4><p>本机的ssh已加到Github上，<a href=\"http://blog.csdn.net/binyao02123202/article/details/20130891\">添加ssh教程</a>。</p>\n<h4 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h4><p>在Github上新建一个项目（repository）并配置<code>_config.yml</code>文件的<code>deploy:</code>属性</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Deployment</span></span><br><span class=\"line\"><span class=\"comment\">### Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: <span class=\"comment\">##这里为项目的Git地址</span></span><br><span class=\"line\">  branch: gh-pages <span class=\"comment\">##要部署到的项目的分支(branch)</span></span><br></pre></td></tr></table></figure>\n<p>在配置完成之后执行以下命令运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>完成后在浏览器输入<code>_config.yml</code>中配置的<code>url:</code>即可打开个人博客</p>\n<h2 id=\"F-amp-Q\"><a href=\"#F-amp-Q\" class=\"headerlink\" title=\"F&amp;Q\"></a>F&amp;Q</h2><ul>\n<li><p>F：为什么在本地上部署成功，而远程部署到Github时会出现没有格式的情况？<br>Q：必须在<code>_config.yml</code>中设置对应的<code>url:</code>和<code>root:</code>属性，其中<code>url:</code>必须为完整的网站地址，<code>root:</code>网站除去站点地址后面的那一部分，比如：我的blog设置为 <code>url: http://naughtboy.github.io/blog/ root: /blog/</code></p>\n</li>\n<li><p>F：怎么不让在首页的时候整篇文章都显示出来？<br>Q：文章截断，在需要截断的地方插入 <code>&lt;!--more--&gt;</code></p>\n</li>\n</ul>"},{"title":"Rx系列学习笔记","date":"2016-06-12T09:22:44.000Z","_content":"\n闲来无事，填下很久以前就留下的坑，Rx系列也出来很久了，当直到现在才开始学习。暂时包括RxJava和RxAndroid。这篇文章主要记录在学习中的问题。\n\nPS：如果文章有问题，麻烦指正。\n\n<!-- more -->\n## RxJava\nRxJava的Rx系列的基础，所以从这儿开始。\n参考资料：[给 Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083)\n\n### RxJava和EventBus的区别和类比\n由于之前学习使用过EventBus，所以学习的时候用EventBus进行对比，刚开始两种的观察者和订阅的概念有点混淆，在骚扰了Android Studio B群的 @Wesley.H 同学之后大概得到下面的类比：\n```\n\t\t//以下代码对比的对象都是EventBus\n  \n\t\t//观察者，相当于接收器 onMainThread(Event event)\n        Observer observer=new Observer<String>() {\n            @Override\n            public void onCompleted() {\n\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                LogUtil.e(\"onNext\",s);\n            }\n\n        };\n\n        //相当于一个即将Post的 Event\n        Observable observable=Observable.create(new Observable.OnSubscribe<String>() {\n            @Override\n            public void call(Subscriber<? super String> subscriber) {\n                subscriber.onNext(\"hello\");\n            }\n        });\n\n        //将事件post出去\n        observable.subscribe(observer);```\n\t\t\n### 变换\n变换的概念理解并使用起来并不困难，就是在发送数据之前先做N次（取决你调用了几次变换的方法）处理，再把处理的结果发送到目标点。难点在于变换的原理。\n* ``map()``方法是最简单的变换。\n* ``flatMap()``是“嵌套”的``map()``————这是我个人的理解。\n```\nObservable.just(\"1\",\"2\",\"3\").flatMap(new Func1<String, Observable<String>>() {\n            @Override\n            public Observable<String> call(final String s) {\n                return Observable.create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        subscriber.onNext(s+\":map1\");\n                    }\n                });\n            }\n        }).subscribe(new Action1<String>() {\n            @Override\n            public void call(String s) {\n                LogUtil.e(\"action\",s);\n            }\n        });\t```\n控制台的输出信息是：\n```\naction: 1:map1\naction: 2:map1\naction: 3:map1```\n说实话，*我对``flatMap()``和``map()``还是有点模糊，所以暂时留坑","source":"_posts/2016-06-12-Rx系列笔记.md","raw":"---\ntitle: Rx系列学习笔记\ndate: 2016-06-12 17:22:44\ntags: Android\n---\n\n闲来无事，填下很久以前就留下的坑，Rx系列也出来很久了，当直到现在才开始学习。暂时包括RxJava和RxAndroid。这篇文章主要记录在学习中的问题。\n\nPS：如果文章有问题，麻烦指正。\n\n<!-- more -->\n## RxJava\nRxJava的Rx系列的基础，所以从这儿开始。\n参考资料：[给 Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083)\n\n### RxJava和EventBus的区别和类比\n由于之前学习使用过EventBus，所以学习的时候用EventBus进行对比，刚开始两种的观察者和订阅的概念有点混淆，在骚扰了Android Studio B群的 @Wesley.H 同学之后大概得到下面的类比：\n```\n\t\t//以下代码对比的对象都是EventBus\n  \n\t\t//观察者，相当于接收器 onMainThread(Event event)\n        Observer observer=new Observer<String>() {\n            @Override\n            public void onCompleted() {\n\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                LogUtil.e(\"onNext\",s);\n            }\n\n        };\n\n        //相当于一个即将Post的 Event\n        Observable observable=Observable.create(new Observable.OnSubscribe<String>() {\n            @Override\n            public void call(Subscriber<? super String> subscriber) {\n                subscriber.onNext(\"hello\");\n            }\n        });\n\n        //将事件post出去\n        observable.subscribe(observer);```\n\t\t\n### 变换\n变换的概念理解并使用起来并不困难，就是在发送数据之前先做N次（取决你调用了几次变换的方法）处理，再把处理的结果发送到目标点。难点在于变换的原理。\n* ``map()``方法是最简单的变换。\n* ``flatMap()``是“嵌套”的``map()``————这是我个人的理解。\n```\nObservable.just(\"1\",\"2\",\"3\").flatMap(new Func1<String, Observable<String>>() {\n            @Override\n            public Observable<String> call(final String s) {\n                return Observable.create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        subscriber.onNext(s+\":map1\");\n                    }\n                });\n            }\n        }).subscribe(new Action1<String>() {\n            @Override\n            public void call(String s) {\n                LogUtil.e(\"action\",s);\n            }\n        });\t```\n控制台的输出信息是：\n```\naction: 1:map1\naction: 2:map1\naction: 3:map1```\n说实话，*我对``flatMap()``和``map()``还是有点模糊，所以暂时留坑","slug":"Rx系列笔记","published":1,"updated":"2016-06-16T09:34:12.917Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipi445hc0002h8qwed7a4k1y","content":"<p>闲来无事，填下很久以前就留下的坑，Rx系列也出来很久了，当直到现在才开始学习。暂时包括RxJava和RxAndroid。这篇文章主要记录在学习中的问题。</p>\n<p>PS：如果文章有问题，麻烦指正。</p>\n<a id=\"more\"></a>\n<h2 id=\"RxJava\"><a href=\"#RxJava\" class=\"headerlink\" title=\"RxJava\"></a>RxJava</h2><p>RxJava的Rx系列的基础，所以从这儿开始。<br>参考资料：<a href=\"http://gank.io/post/560e15be2dca930e00da1083\" target=\"_blank\" rel=\"external\">给 Android 开发者的 RxJava 详解</a></p>\n<h3 id=\"RxJava和EventBus的区别和类比\"><a href=\"#RxJava和EventBus的区别和类比\" class=\"headerlink\" title=\"RxJava和EventBus的区别和类比\"></a>RxJava和EventBus的区别和类比</h3><p>由于之前学习使用过EventBus，所以学习的时候用EventBus进行对比，刚开始两种的观察者和订阅的概念有点混淆，在骚扰了Android Studio B群的 @Wesley.H 同学之后大概得到下面的类比：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//以下代码对比的对象都是EventBus</span><br><span class=\"line\"></span><br><span class=\"line\">//观察者，相当于接收器 onMainThread(Event event)</span><br><span class=\"line\">      Observer observer=new Observer&lt;String&gt;() &#123;</span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void onCompleted() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void onError(Throwable e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void onNext(String s) &#123;</span><br><span class=\"line\">              LogUtil.e(&quot;onNext&quot;,s);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">      //相当于一个即将Post的 Event</span><br><span class=\"line\">      Observable observable=Observable.create(new Observable.OnSubscribe&lt;String&gt;() &#123;</span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void call(Subscriber&lt;? super String&gt; subscriber) &#123;</span><br><span class=\"line\">              subscriber.onNext(&quot;hello&quot;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //将事件post出去</span><br><span class=\"line\">      observable.subscribe(observer);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"变换\"><a href=\"#变换\" class=\"headerlink\" title=\"变换\"></a>变换</h3><p>变换的概念理解并使用起来并不困难，就是在发送数据之前先做N次（取决你调用了几次变换的方法）处理，再把处理的结果发送到目标点。难点在于变换的原理。</p>\n<ul>\n<li><code>map()</code>方法是最简单的变换。</li>\n<li><code>flatMap()</code>是“嵌套”的<code>map()</code>————这是我个人的理解。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Observable.just(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;).flatMap(new Func1&lt;String, Observable&lt;String&gt;&gt;() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public Observable&lt;String&gt; call(final String s) &#123;</span><br><span class=\"line\">                return Observable.create(new Observable.OnSubscribe&lt;String&gt;() &#123;</span><br><span class=\"line\">                    @Override</span><br><span class=\"line\">                    public void call(Subscriber&lt;? super String&gt; subscriber) &#123;</span><br><span class=\"line\">                        subscriber.onNext(s+&quot;:map1&quot;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).subscribe(new Action1&lt;String&gt;() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void call(String s) &#123;</span><br><span class=\"line\">                LogUtil.e(&quot;action&quot;,s);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>控制台的输出信息是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">action: 1:map1</span><br><span class=\"line\">action: 2:map1</span><br><span class=\"line\">action: 3:map1</span><br></pre></td></tr></table></figure></p>\n<p>说实话，*我对<code>flatMap()</code>和<code>map()</code>还是有点模糊，所以暂时留坑</p>\n","excerpt":"<p>闲来无事，填下很久以前就留下的坑，Rx系列也出来很久了，当直到现在才开始学习。暂时包括RxJava和RxAndroid。这篇文章主要记录在学习中的问题。</p>\n<p>PS：如果文章有问题，麻烦指正。</p>","more":"<h2 id=\"RxJava\"><a href=\"#RxJava\" class=\"headerlink\" title=\"RxJava\"></a>RxJava</h2><p>RxJava的Rx系列的基础，所以从这儿开始。<br>参考资料：<a href=\"http://gank.io/post/560e15be2dca930e00da1083\">给 Android 开发者的 RxJava 详解</a></p>\n<h3 id=\"RxJava和EventBus的区别和类比\"><a href=\"#RxJava和EventBus的区别和类比\" class=\"headerlink\" title=\"RxJava和EventBus的区别和类比\"></a>RxJava和EventBus的区别和类比</h3><p>由于之前学习使用过EventBus，所以学习的时候用EventBus进行对比，刚开始两种的观察者和订阅的概念有点混淆，在骚扰了Android Studio B群的 @Wesley.H 同学之后大概得到下面的类比：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//以下代码对比的对象都是EventBus</span><br><span class=\"line\"></span><br><span class=\"line\">//观察者，相当于接收器 onMainThread(Event event)</span><br><span class=\"line\">      Observer observer=new Observer&lt;String&gt;() &#123;</span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void onCompleted() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void onError(Throwable e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void onNext(String s) &#123;</span><br><span class=\"line\">              LogUtil.e(&quot;onNext&quot;,s);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">      //相当于一个即将Post的 Event</span><br><span class=\"line\">      Observable observable=Observable.create(new Observable.OnSubscribe&lt;String&gt;() &#123;</span><br><span class=\"line\">          @Override</span><br><span class=\"line\">          public void call(Subscriber&lt;? super String&gt; subscriber) &#123;</span><br><span class=\"line\">              subscriber.onNext(&quot;hello&quot;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      //将事件post出去</span><br><span class=\"line\">      observable.subscribe(observer);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"变换\"><a href=\"#变换\" class=\"headerlink\" title=\"变换\"></a>变换</h3><p>变换的概念理解并使用起来并不困难，就是在发送数据之前先做N次（取决你调用了几次变换的方法）处理，再把处理的结果发送到目标点。难点在于变换的原理。</p>\n<ul>\n<li><code>map()</code>方法是最简单的变换。</li>\n<li><code>flatMap()</code>是“嵌套”的<code>map()</code>————这是我个人的理解。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Observable.just(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;).flatMap(new Func1&lt;String, Observable&lt;String&gt;&gt;() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public Observable&lt;String&gt; call(final String s) &#123;</span><br><span class=\"line\">                return Observable.create(new Observable.OnSubscribe&lt;String&gt;() &#123;</span><br><span class=\"line\">                    @Override</span><br><span class=\"line\">                    public void call(Subscriber&lt;? super String&gt; subscriber) &#123;</span><br><span class=\"line\">                        subscriber.onNext(s+&quot;:map1&quot;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;).subscribe(new Action1&lt;String&gt;() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void call(String s) &#123;</span><br><span class=\"line\">                LogUtil.e(&quot;action&quot;,s);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>控制台的输出信息是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">action: 1:map1</span><br><span class=\"line\">action: 2:map1</span><br><span class=\"line\">action: 3:map1</span><br></pre></td></tr></table></figure></p>\n<p>说实话，*我对<code>flatMap()</code>和<code>map()</code>还是有点模糊，所以暂时留坑</p>"},{"title":"使用RxJava实现EventBus——RxBus（翻译）","date":"2016-06-16T09:35:44.000Z","_content":"\n\n> 原文：http://nerds.weddingpartyapp.com/tech/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/\n\n**（译者注：文中的EventBus多指事件总线这种设计模式，而非[``EventBus``](https://github.com/greenrobot/EventBus)这个具体的类库。） **\n\n这一篇文章有三个部分:\n- 快速了解什么是EventBus\n- 使用RxJava实现EventBus\n- 对RxBus的一些想法\n\n<!-- more -->\n\n“RxBus”不是一种类库。使用RxJava实现EventBus是非常简单的，而且不需要担心会让你的类库变大。\n\n## 第一部分：什么是Event Bus\n\n让我们来讨论下两种相似的东西：观察者模式和Pub-Sub模式。\n（译者注：Pub-Sub，即pubish-subscribe，发布-订阅）\n\n### 观察者模式\n这种模式的意思是：你的一个类或者主要对象（Observable）将一个相关的信息通知（Event）给其他所有感兴趣的类或对象（Observer）。\n\n### Pub-Sub模式\n该模式的目标和观察者模式的目的是一样的，即：你想让其它的一些类知道或了解到某些事件的发生。\n观察者模式和Pub-Sub模式有一个重要的区别：Pub-Sub模式的关注点在于把广播发出去，而观察者模式并不在乎消息是发到哪里去了，只是在乎消息是否已经发出去了，换句话说，被观察者（ 或发布者）不需要知道谁是观察者（或订阅者）。\n\n### 为什么要匿名？\n计算机编程里面一个好词汇叫“解耦”。你应该在你的程序设计里面尽可能地保持低耦合度。\n通常情况下，你希望发布者（Publisher）都能知道每一个需要通知的订阅者（ subscriber），这样才能在事件或者消息准备好了的时候准确通知到这些订阅者。当在EventBus 里面，发布者并不需要知道每一个需要通知的订阅者，这种独立性有助于解耦，因为发布者和订阅者不需要通过逻辑编码来建立它们的关系。\n话句话说，在你编写代码的每一个地方尽量有意识地解耦。\n\n### 怎么匿名？\n那么，在Pub-Sub模式里面自然就出现了这么一个问题：怎么实现发表者（publisher）和订阅者（ Subscriber）之间的匿名？一个简单的实现方法就是创建一个中间人（ middleman）并让这个中间人负责所有的通信。而EventBus就是中间人的一种。\n在Android里面，通常使用两个EventBus的类库：Square 的[``Otto``](http://square.github.io/otto/) 和 Green Robot 的[``EventBus``](https://github.com/greenrobot/EventBus)。网上有大量的关于如何把它们应用到你的App里面的文章。\n\n## 使用RxJava实现EventBus\n我以前发表过一篇有关 [RxJava for Android](https://github.com/kaushikgopal/RxJava-Android-Samples)的文章,我会继续在那篇文章写完具体的实现。以下是实现中相关的一部分：\n```\n// 这就是那个中间类\npublic class RxBus {\n\n    private final Subject<Object, Object> _bus = new SerializedSubject<>(PublishSubject.create());\n\n public void send(Object o) {\n        _bus.onNext(o);\n  }\n\n    public Observable<Object> toObserverable() {\n        return _bus;\n  }\n}```\n\n现在，你有了一个可以用的EventBus了。\n下面是发送一个事件的代码：\n```\n@OnClick(R.id.btn_demo_rxbus_tap)\npublic void onTapButtonClicked() {\n\n    _rxBus.send(new TapEvent());\n}```\n\n下面是你在``fragment``、``services``等需要监听这些事件的地方的代码：\n```\n// 这个_rxBus 对象实例是那个发布事件的对象\n_rxBus.toObserverable().subscribe(new Action1<Object>() {\n  @Override\n  public void call(Object event) {\n    if(event instanceof TapEvent) {\n      _showTapText();\n    }else if(event instanceof SomeOtherEvent) {\n      _doSomethingElse();\n    }\n  }\n});```\n\n在这个例子里，我们在顶部的绿色``fragment``发布了一个事件，并在通过总线在底部蓝色的``fragment``进行监听。\n\n[![demo](http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif \"demo\")](http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif \"demo\")\n\n## 对RxBus的一些想法\n###  Dead Events（死亡事件：没有订阅者的事件）\n有某些情况下，知道当前有没有观察者（Observers）在监听总线（Bus）是很有用的。比如，在你[用EventBus处理你的消息推送](https://markhudnall.com/2013/11/13/gcm-foreground-and-background/)，而且你不想App在前台的时候发送一个 push notification（推送通知），那么监听一个 [Dead Event](https://github.com/square/otto/blob/master/otto/src/main/java/com/squareup/otto/DeadEvent.java)就很重要了。\n又比如我们最近发布的 Wedding Party（译者注：原文，目测是一款App），我们增加了“消息”的功能。如果用户打开App（至少有一个以上对bus的监听者），我们不会发送push notification。但如果App在后台的话，我们会发送一个能让他们知道聊天信息的push notification。要是一个事件被发送到Event Bus中，如果当前没有监听者，就会返回一个Dead Event。如果我们得到一个返回的Dead Event的话就会发送一个 Push Notification。\n你该怎么用 RxBus实现Dead Event呢？\n其实很简单，``Subject``类中有一个很有用的``hasObservers()``方法就可以实现了。这个方法是在[1.x的版本被加到RxJava](https://github.com/ReactiveX/RxJava/pull/1802)的，所以至少在当前最后的版本（0.23.0）的RxAndroid中可以找到这个方法。\n### 那么我应该使用RxBus而不是 Otto/Event Bus 吗？\n如果你只是先在你的Android App里面简单地应用Event Bus，你最好还是使用Otto（更推荐）或者[Event Bus](https://github.com/greenrobot/EventBus)。Otto 拥有更加简洁的由注解驱动的Api，使用起来会更加地方便。\n如果你熟悉Rx，而且已经在你的项目里面使用了RxJava，而且又想摆脱多余的库，那么你一定要试试RxBus。\n\n> 译者注：英文水平有限，恳请看到该文章的诸位帮忙校对下，看看哪里出错了。","source":"_posts/2016-06-16-使用RxJava实现EventBus——RxBus（翻译）.md","raw":"---\ntitle: 使用RxJava实现EventBus——RxBus（翻译）\ndate: 2016-06-16 17:35:44\ntags: RxJava\ncategories: Android\n---\n\n\n> 原文：http://nerds.weddingpartyapp.com/tech/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/\n\n**（译者注：文中的EventBus多指事件总线这种设计模式，而非[``EventBus``](https://github.com/greenrobot/EventBus)这个具体的类库。） **\n\n这一篇文章有三个部分:\n- 快速了解什么是EventBus\n- 使用RxJava实现EventBus\n- 对RxBus的一些想法\n\n<!-- more -->\n\n“RxBus”不是一种类库。使用RxJava实现EventBus是非常简单的，而且不需要担心会让你的类库变大。\n\n## 第一部分：什么是Event Bus\n\n让我们来讨论下两种相似的东西：观察者模式和Pub-Sub模式。\n（译者注：Pub-Sub，即pubish-subscribe，发布-订阅）\n\n### 观察者模式\n这种模式的意思是：你的一个类或者主要对象（Observable）将一个相关的信息通知（Event）给其他所有感兴趣的类或对象（Observer）。\n\n### Pub-Sub模式\n该模式的目标和观察者模式的目的是一样的，即：你想让其它的一些类知道或了解到某些事件的发生。\n观察者模式和Pub-Sub模式有一个重要的区别：Pub-Sub模式的关注点在于把广播发出去，而观察者模式并不在乎消息是发到哪里去了，只是在乎消息是否已经发出去了，换句话说，被观察者（ 或发布者）不需要知道谁是观察者（或订阅者）。\n\n### 为什么要匿名？\n计算机编程里面一个好词汇叫“解耦”。你应该在你的程序设计里面尽可能地保持低耦合度。\n通常情况下，你希望发布者（Publisher）都能知道每一个需要通知的订阅者（ subscriber），这样才能在事件或者消息准备好了的时候准确通知到这些订阅者。当在EventBus 里面，发布者并不需要知道每一个需要通知的订阅者，这种独立性有助于解耦，因为发布者和订阅者不需要通过逻辑编码来建立它们的关系。\n话句话说，在你编写代码的每一个地方尽量有意识地解耦。\n\n### 怎么匿名？\n那么，在Pub-Sub模式里面自然就出现了这么一个问题：怎么实现发表者（publisher）和订阅者（ Subscriber）之间的匿名？一个简单的实现方法就是创建一个中间人（ middleman）并让这个中间人负责所有的通信。而EventBus就是中间人的一种。\n在Android里面，通常使用两个EventBus的类库：Square 的[``Otto``](http://square.github.io/otto/) 和 Green Robot 的[``EventBus``](https://github.com/greenrobot/EventBus)。网上有大量的关于如何把它们应用到你的App里面的文章。\n\n## 使用RxJava实现EventBus\n我以前发表过一篇有关 [RxJava for Android](https://github.com/kaushikgopal/RxJava-Android-Samples)的文章,我会继续在那篇文章写完具体的实现。以下是实现中相关的一部分：\n```\n// 这就是那个中间类\npublic class RxBus {\n\n    private final Subject<Object, Object> _bus = new SerializedSubject<>(PublishSubject.create());\n\n public void send(Object o) {\n        _bus.onNext(o);\n  }\n\n    public Observable<Object> toObserverable() {\n        return _bus;\n  }\n}```\n\n现在，你有了一个可以用的EventBus了。\n下面是发送一个事件的代码：\n```\n@OnClick(R.id.btn_demo_rxbus_tap)\npublic void onTapButtonClicked() {\n\n    _rxBus.send(new TapEvent());\n}```\n\n下面是你在``fragment``、``services``等需要监听这些事件的地方的代码：\n```\n// 这个_rxBus 对象实例是那个发布事件的对象\n_rxBus.toObserverable().subscribe(new Action1<Object>() {\n  @Override\n  public void call(Object event) {\n    if(event instanceof TapEvent) {\n      _showTapText();\n    }else if(event instanceof SomeOtherEvent) {\n      _doSomethingElse();\n    }\n  }\n});```\n\n在这个例子里，我们在顶部的绿色``fragment``发布了一个事件，并在通过总线在底部蓝色的``fragment``进行监听。\n\n[![demo](http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif \"demo\")](http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif \"demo\")\n\n## 对RxBus的一些想法\n###  Dead Events（死亡事件：没有订阅者的事件）\n有某些情况下，知道当前有没有观察者（Observers）在监听总线（Bus）是很有用的。比如，在你[用EventBus处理你的消息推送](https://markhudnall.com/2013/11/13/gcm-foreground-and-background/)，而且你不想App在前台的时候发送一个 push notification（推送通知），那么监听一个 [Dead Event](https://github.com/square/otto/blob/master/otto/src/main/java/com/squareup/otto/DeadEvent.java)就很重要了。\n又比如我们最近发布的 Wedding Party（译者注：原文，目测是一款App），我们增加了“消息”的功能。如果用户打开App（至少有一个以上对bus的监听者），我们不会发送push notification。但如果App在后台的话，我们会发送一个能让他们知道聊天信息的push notification。要是一个事件被发送到Event Bus中，如果当前没有监听者，就会返回一个Dead Event。如果我们得到一个返回的Dead Event的话就会发送一个 Push Notification。\n你该怎么用 RxBus实现Dead Event呢？\n其实很简单，``Subject``类中有一个很有用的``hasObservers()``方法就可以实现了。这个方法是在[1.x的版本被加到RxJava](https://github.com/ReactiveX/RxJava/pull/1802)的，所以至少在当前最后的版本（0.23.0）的RxAndroid中可以找到这个方法。\n### 那么我应该使用RxBus而不是 Otto/Event Bus 吗？\n如果你只是先在你的Android App里面简单地应用Event Bus，你最好还是使用Otto（更推荐）或者[Event Bus](https://github.com/greenrobot/EventBus)。Otto 拥有更加简洁的由注解驱动的Api，使用起来会更加地方便。\n如果你熟悉Rx，而且已经在你的项目里面使用了RxJava，而且又想摆脱多余的库，那么你一定要试试RxBus。\n\n> 译者注：英文水平有限，恳请看到该文章的诸位帮忙校对下，看看哪里出错了。","slug":"使用RxJava实现EventBus——RxBus（翻译）","published":1,"updated":"2016-06-16T09:38:58.740Z","_id":"cipi445hm0005h8qwv3jl6boz","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>原文：<a href=\"http://nerds.weddingpartyapp.com/tech/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/\" target=\"_blank\" rel=\"external\">http://nerds.weddingpartyapp.com/tech/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/</a></p>\n</blockquote>\n<p><strong>（译者注：文中的EventBus多指事件总线这种设计模式，而非<a href=\"https://github.com/greenrobot/EventBus\" target=\"_blank\" rel=\"external\"><code>EventBus</code></a>这个具体的类库。） </strong></p>\n<p>这一篇文章有三个部分:</p>\n<ul>\n<li>快速了解什么是EventBus</li>\n<li>使用RxJava实现EventBus</li>\n<li>对RxBus的一些想法</li>\n</ul>\n<a id=\"more\"></a>\n<p>“RxBus”不是一种类库。使用RxJava实现EventBus是非常简单的，而且不需要担心会让你的类库变大。</p>\n<h2 id=\"第一部分：什么是Event-Bus\"><a href=\"#第一部分：什么是Event-Bus\" class=\"headerlink\" title=\"第一部分：什么是Event Bus\"></a>第一部分：什么是Event Bus</h2><p>让我们来讨论下两种相似的东西：观察者模式和Pub-Sub模式。<br>（译者注：Pub-Sub，即pubish-subscribe，发布-订阅）</p>\n<h3 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h3><p>这种模式的意思是：你的一个类或者主要对象（Observable）将一个相关的信息通知（Event）给其他所有感兴趣的类或对象（Observer）。</p>\n<h3 id=\"Pub-Sub模式\"><a href=\"#Pub-Sub模式\" class=\"headerlink\" title=\"Pub-Sub模式\"></a>Pub-Sub模式</h3><p>该模式的目标和观察者模式的目的是一样的，即：你想让其它的一些类知道或了解到某些事件的发生。<br>观察者模式和Pub-Sub模式有一个重要的区别：Pub-Sub模式的关注点在于把广播发出去，而观察者模式并不在乎消息是发到哪里去了，只是在乎消息是否已经发出去了，换句话说，被观察者（ 或发布者）不需要知道谁是观察者（或订阅者）。</p>\n<h3 id=\"为什么要匿名？\"><a href=\"#为什么要匿名？\" class=\"headerlink\" title=\"为什么要匿名？\"></a>为什么要匿名？</h3><p>计算机编程里面一个好词汇叫“解耦”。你应该在你的程序设计里面尽可能地保持低耦合度。<br>通常情况下，你希望发布者（Publisher）都能知道每一个需要通知的订阅者（ subscriber），这样才能在事件或者消息准备好了的时候准确通知到这些订阅者。当在EventBus 里面，发布者并不需要知道每一个需要通知的订阅者，这种独立性有助于解耦，因为发布者和订阅者不需要通过逻辑编码来建立它们的关系。<br>话句话说，在你编写代码的每一个地方尽量有意识地解耦。</p>\n<h3 id=\"怎么匿名？\"><a href=\"#怎么匿名？\" class=\"headerlink\" title=\"怎么匿名？\"></a>怎么匿名？</h3><p>那么，在Pub-Sub模式里面自然就出现了这么一个问题：怎么实现发表者（publisher）和订阅者（ Subscriber）之间的匿名？一个简单的实现方法就是创建一个中间人（ middleman）并让这个中间人负责所有的通信。而EventBus就是中间人的一种。<br>在Android里面，通常使用两个EventBus的类库：Square 的<a href=\"http://square.github.io/otto/\" target=\"_blank\" rel=\"external\"><code>Otto</code></a> 和 Green Robot 的<a href=\"https://github.com/greenrobot/EventBus\" target=\"_blank\" rel=\"external\"><code>EventBus</code></a>。网上有大量的关于如何把它们应用到你的App里面的文章。</p>\n<h2 id=\"使用RxJava实现EventBus\"><a href=\"#使用RxJava实现EventBus\" class=\"headerlink\" title=\"使用RxJava实现EventBus\"></a>使用RxJava实现EventBus</h2><p>我以前发表过一篇有关 <a href=\"https://github.com/kaushikgopal/RxJava-Android-Samples\" target=\"_blank\" rel=\"external\">RxJava for Android</a>的文章,我会继续在那篇文章写完具体的实现。以下是实现中相关的一部分：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 这就是那个中间类</span><br><span class=\"line\">public class RxBus &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private final Subject&lt;Object, Object&gt; _bus = new SerializedSubject&lt;&gt;(PublishSubject.create());</span><br><span class=\"line\"></span><br><span class=\"line\"> public void send(Object o) &#123;</span><br><span class=\"line\">        _bus.onNext(o);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Observable&lt;Object&gt; toObserverable() &#123;</span><br><span class=\"line\">        return _bus;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>现在，你有了一个可以用的EventBus了。<br>下面是发送一个事件的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@OnClick(R.id.btn_demo_rxbus_tap)</span><br><span class=\"line\">public void onTapButtonClicked() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    _rxBus.send(new TapEvent());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>下面是你在<code>fragment</code>、<code>services</code>等需要监听这些事件的地方的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 这个_rxBus 对象实例是那个发布事件的对象</span><br><span class=\"line\">_rxBus.toObserverable().subscribe(new Action1&lt;Object&gt;() &#123;</span><br><span class=\"line\">  @Override</span><br><span class=\"line\">  public void call(Object event) &#123;</span><br><span class=\"line\">    if(event instanceof TapEvent) &#123;</span><br><span class=\"line\">      _showTapText();</span><br><span class=\"line\">    &#125;else if(event instanceof SomeOtherEvent) &#123;</span><br><span class=\"line\">      _doSomethingElse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>在这个例子里，我们在顶部的绿色<code>fragment</code>发布了一个事件，并在通过总线在底部蓝色的<code>fragment</code>进行监听。</p>\n<p><a href=\"http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif\" title=\"demo\" target=\"_blank\" rel=\"external\"><img src=\"http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif\" alt=\"demo\" title=\"demo\"></a></p>\n<h2 id=\"对RxBus的一些想法\"><a href=\"#对RxBus的一些想法\" class=\"headerlink\" title=\"对RxBus的一些想法\"></a>对RxBus的一些想法</h2><h3 id=\"Dead-Events（死亡事件：没有订阅者的事件）\"><a href=\"#Dead-Events（死亡事件：没有订阅者的事件）\" class=\"headerlink\" title=\"Dead Events（死亡事件：没有订阅者的事件）\"></a>Dead Events（死亡事件：没有订阅者的事件）</h3><p>有某些情况下，知道当前有没有观察者（Observers）在监听总线（Bus）是很有用的。比如，在你<a href=\"https://markhudnall.com/2013/11/13/gcm-foreground-and-background/\" target=\"_blank\" rel=\"external\">用EventBus处理你的消息推送</a>，而且你不想App在前台的时候发送一个 push notification（推送通知），那么监听一个 <a href=\"https://github.com/square/otto/blob/master/otto/src/main/java/com/squareup/otto/DeadEvent.java\" target=\"_blank\" rel=\"external\">Dead Event</a>就很重要了。<br>又比如我们最近发布的 Wedding Party（译者注：原文，目测是一款App），我们增加了“消息”的功能。如果用户打开App（至少有一个以上对bus的监听者），我们不会发送push notification。但如果App在后台的话，我们会发送一个能让他们知道聊天信息的push notification。要是一个事件被发送到Event Bus中，如果当前没有监听者，就会返回一个Dead Event。如果我们得到一个返回的Dead Event的话就会发送一个 Push Notification。<br>你该怎么用 RxBus实现Dead Event呢？<br>其实很简单，<code>Subject</code>类中有一个很有用的<code>hasObservers()</code>方法就可以实现了。这个方法是在<a href=\"https://github.com/ReactiveX/RxJava/pull/1802\" target=\"_blank\" rel=\"external\">1.x的版本被加到RxJava</a>的，所以至少在当前最后的版本（0.23.0）的RxAndroid中可以找到这个方法。</p>\n<h3 id=\"那么我应该使用RxBus而不是-Otto-Event-Bus-吗？\"><a href=\"#那么我应该使用RxBus而不是-Otto-Event-Bus-吗？\" class=\"headerlink\" title=\"那么我应该使用RxBus而不是 Otto/Event Bus 吗？\"></a>那么我应该使用RxBus而不是 Otto/Event Bus 吗？</h3><p>如果你只是先在你的Android App里面简单地应用Event Bus，你最好还是使用Otto（更推荐）或者<a href=\"https://github.com/greenrobot/EventBus\" target=\"_blank\" rel=\"external\">Event Bus</a>。Otto 拥有更加简洁的由注解驱动的Api，使用起来会更加地方便。<br>如果你熟悉Rx，而且已经在你的项目里面使用了RxJava，而且又想摆脱多余的库，那么你一定要试试RxBus。</p>\n<blockquote>\n<p>译者注：英文水平有限，恳请看到该文章的诸位帮忙校对下，看看哪里出错了。</p>\n</blockquote>\n","excerpt":"<blockquote>\n<p>原文：<a href=\"http://nerds.weddingpartyapp.com/tech/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/\">http://nerds.weddingpartyapp.com/tech/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/</a></p>\n</blockquote>\n<p><strong>（译者注：文中的EventBus多指事件总线这种设计模式，而非<a href=\"https://github.com/greenrobot/EventBus\"><code>EventBus</code></a>这个具体的类库。） </strong></p>\n<p>这一篇文章有三个部分:</p>\n<ul>\n<li>快速了解什么是EventBus</li>\n<li>使用RxJava实现EventBus</li>\n<li>对RxBus的一些想法</li>\n</ul>","more":"<p>“RxBus”不是一种类库。使用RxJava实现EventBus是非常简单的，而且不需要担心会让你的类库变大。</p>\n<h2 id=\"第一部分：什么是Event-Bus\"><a href=\"#第一部分：什么是Event-Bus\" class=\"headerlink\" title=\"第一部分：什么是Event Bus\"></a>第一部分：什么是Event Bus</h2><p>让我们来讨论下两种相似的东西：观察者模式和Pub-Sub模式。<br>（译者注：Pub-Sub，即pubish-subscribe，发布-订阅）</p>\n<h3 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h3><p>这种模式的意思是：你的一个类或者主要对象（Observable）将一个相关的信息通知（Event）给其他所有感兴趣的类或对象（Observer）。</p>\n<h3 id=\"Pub-Sub模式\"><a href=\"#Pub-Sub模式\" class=\"headerlink\" title=\"Pub-Sub模式\"></a>Pub-Sub模式</h3><p>该模式的目标和观察者模式的目的是一样的，即：你想让其它的一些类知道或了解到某些事件的发生。<br>观察者模式和Pub-Sub模式有一个重要的区别：Pub-Sub模式的关注点在于把广播发出去，而观察者模式并不在乎消息是发到哪里去了，只是在乎消息是否已经发出去了，换句话说，被观察者（ 或发布者）不需要知道谁是观察者（或订阅者）。</p>\n<h3 id=\"为什么要匿名？\"><a href=\"#为什么要匿名？\" class=\"headerlink\" title=\"为什么要匿名？\"></a>为什么要匿名？</h3><p>计算机编程里面一个好词汇叫“解耦”。你应该在你的程序设计里面尽可能地保持低耦合度。<br>通常情况下，你希望发布者（Publisher）都能知道每一个需要通知的订阅者（ subscriber），这样才能在事件或者消息准备好了的时候准确通知到这些订阅者。当在EventBus 里面，发布者并不需要知道每一个需要通知的订阅者，这种独立性有助于解耦，因为发布者和订阅者不需要通过逻辑编码来建立它们的关系。<br>话句话说，在你编写代码的每一个地方尽量有意识地解耦。</p>\n<h3 id=\"怎么匿名？\"><a href=\"#怎么匿名？\" class=\"headerlink\" title=\"怎么匿名？\"></a>怎么匿名？</h3><p>那么，在Pub-Sub模式里面自然就出现了这么一个问题：怎么实现发表者（publisher）和订阅者（ Subscriber）之间的匿名？一个简单的实现方法就是创建一个中间人（ middleman）并让这个中间人负责所有的通信。而EventBus就是中间人的一种。<br>在Android里面，通常使用两个EventBus的类库：Square 的<a href=\"http://square.github.io/otto/\"><code>Otto</code></a> 和 Green Robot 的<a href=\"https://github.com/greenrobot/EventBus\"><code>EventBus</code></a>。网上有大量的关于如何把它们应用到你的App里面的文章。</p>\n<h2 id=\"使用RxJava实现EventBus\"><a href=\"#使用RxJava实现EventBus\" class=\"headerlink\" title=\"使用RxJava实现EventBus\"></a>使用RxJava实现EventBus</h2><p>我以前发表过一篇有关 <a href=\"https://github.com/kaushikgopal/RxJava-Android-Samples\">RxJava for Android</a>的文章,我会继续在那篇文章写完具体的实现。以下是实现中相关的一部分：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 这就是那个中间类</span><br><span class=\"line\">public class RxBus &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private final Subject&lt;Object, Object&gt; _bus = new SerializedSubject&lt;&gt;(PublishSubject.create());</span><br><span class=\"line\"></span><br><span class=\"line\"> public void send(Object o) &#123;</span><br><span class=\"line\">        _bus.onNext(o);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Observable&lt;Object&gt; toObserverable() &#123;</span><br><span class=\"line\">        return _bus;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>现在，你有了一个可以用的EventBus了。<br>下面是发送一个事件的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@OnClick(R.id.btn_demo_rxbus_tap)</span><br><span class=\"line\">public void onTapButtonClicked() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    _rxBus.send(new TapEvent());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>下面是你在<code>fragment</code>、<code>services</code>等需要监听这些事件的地方的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 这个_rxBus 对象实例是那个发布事件的对象</span><br><span class=\"line\">_rxBus.toObserverable().subscribe(new Action1&lt;Object&gt;() &#123;</span><br><span class=\"line\">  @Override</span><br><span class=\"line\">  public void call(Object event) &#123;</span><br><span class=\"line\">    if(event instanceof TapEvent) &#123;</span><br><span class=\"line\">      _showTapText();</span><br><span class=\"line\">    &#125;else if(event instanceof SomeOtherEvent) &#123;</span><br><span class=\"line\">      _doSomethingElse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>在这个例子里，我们在顶部的绿色<code>fragment</code>发布了一个事件，并在通过总线在底部蓝色的<code>fragment</code>进行监听。</p>\n<p><a href=\"http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif\" title=\"demo\"><img src=\"http://nerds.weddingpartyapp.com/images/posts/rxbus_simple.gif\" alt=\"demo\" title=\"demo\"></a></p>\n<h2 id=\"对RxBus的一些想法\"><a href=\"#对RxBus的一些想法\" class=\"headerlink\" title=\"对RxBus的一些想法\"></a>对RxBus的一些想法</h2><h3 id=\"Dead-Events（死亡事件：没有订阅者的事件）\"><a href=\"#Dead-Events（死亡事件：没有订阅者的事件）\" class=\"headerlink\" title=\"Dead Events（死亡事件：没有订阅者的事件）\"></a>Dead Events（死亡事件：没有订阅者的事件）</h3><p>有某些情况下，知道当前有没有观察者（Observers）在监听总线（Bus）是很有用的。比如，在你<a href=\"https://markhudnall.com/2013/11/13/gcm-foreground-and-background/\">用EventBus处理你的消息推送</a>，而且你不想App在前台的时候发送一个 push notification（推送通知），那么监听一个 <a href=\"https://github.com/square/otto/blob/master/otto/src/main/java/com/squareup/otto/DeadEvent.java\">Dead Event</a>就很重要了。<br>又比如我们最近发布的 Wedding Party（译者注：原文，目测是一款App），我们增加了“消息”的功能。如果用户打开App（至少有一个以上对bus的监听者），我们不会发送push notification。但如果App在后台的话，我们会发送一个能让他们知道聊天信息的push notification。要是一个事件被发送到Event Bus中，如果当前没有监听者，就会返回一个Dead Event。如果我们得到一个返回的Dead Event的话就会发送一个 Push Notification。<br>你该怎么用 RxBus实现Dead Event呢？<br>其实很简单，<code>Subject</code>类中有一个很有用的<code>hasObservers()</code>方法就可以实现了。这个方法是在<a href=\"https://github.com/ReactiveX/RxJava/pull/1802\">1.x的版本被加到RxJava</a>的，所以至少在当前最后的版本（0.23.0）的RxAndroid中可以找到这个方法。</p>\n<h3 id=\"那么我应该使用RxBus而不是-Otto-Event-Bus-吗？\"><a href=\"#那么我应该使用RxBus而不是-Otto-Event-Bus-吗？\" class=\"headerlink\" title=\"那么我应该使用RxBus而不是 Otto/Event Bus 吗？\"></a>那么我应该使用RxBus而不是 Otto/Event Bus 吗？</h3><p>如果你只是先在你的Android App里面简单地应用Event Bus，你最好还是使用Otto（更推荐）或者<a href=\"https://github.com/greenrobot/EventBus\">Event Bus</a>。Otto 拥有更加简洁的由注解驱动的Api，使用起来会更加地方便。<br>如果你熟悉Rx，而且已经在你的项目里面使用了RxJava，而且又想摆脱多余的库，那么你一定要试试RxBus。</p>\n<blockquote>\n<p>译者注：英文水平有限，恳请看到该文章的诸位帮忙校对下，看看哪里出错了。</p>\n</blockquote>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-05-31T06:39:49.850Z","updated":"2016-06-01T07:29:48.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipi445hp0006h8qwnbjcjo8d","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<a id=\"more\"></a>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cipi445hm0005h8qwv3jl6boz","category_id":"cipi445hr0007h8qwwmlk7olf","_id":"cipi445hw000ch8qwlzcugdsg"}],"PostTag":[{"post_id":"cipi445h30000h8qwwqi1ca7j","tag_id":"cipi445hi0004h8qwuo5v4n0y","_id":"cipi445ht0009h8qwhzrdi643"},{"post_id":"cipi445hc0002h8qwed7a4k1y","tag_id":"cipi445hs0008h8qw0rk1amnz","_id":"cipi445hv000bh8qwaxkii8w3"},{"post_id":"cipi445hm0005h8qwv3jl6boz","tag_id":"cipi45fv20000esqwn84nbi8c","_id":"cipi45fvb0001esqwr8guc5h7"}],"Tag":[{"name":"搭建个人博客","_id":"cipi445hi0004h8qwuo5v4n0y"},{"name":"Android","_id":"cipi445hs0008h8qw0rk1amnz"},{"name":"RxJava,RxBus","_id":"cipi445hu000ah8qw5c8mjhcz"},{"name":"RxJava","_id":"cipi45fv20000esqwn84nbi8c"}]}}